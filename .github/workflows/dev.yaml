name: Dev CI	# Name of your workflow

on:
  workflow_dispatch:	# Allows you to manually trigger workflow
  push:
    # Triggers workflow only if code is pushed to dev branch
    branches: [ development ]
   # paths:
      # Triggers workflow only if manifest content is changed
      #- 'manifest.json'

jobs:
  Firefox:	
    runs-on: ubuntu-latest	
    strategy:
      fail-fast: true
      matrix:
        node-version: ['12.x']


    steps:
    - uses: actions/checkout@v2	
    
      # Initialize Node.js
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node_modules
      uses: actions/cache@v2.0.0
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ env.cache-name }}-
          ${{ runner.os }}-node-
          ${{ runner.os }}-

      # Install project dependencies and build
    - name: Install dependencies
      run: npm install --frozen-lockfile
      

    - name: Build the code
      run: npm run build
      env:
        CI: false

    - name: Build Extension for Firefox
      id: web-ext-build
      uses: kewisch/action-web-ext@v1
      with:
        cmd: build
        source: build
      
    - name: Drop artifacts
      uses: actions/upload-artifact@v2
      with:
        name: 'Firefox Artefacts'
        path: ${{ steps.web-ext-build.outputs.target }}

    - name: 'Sign & publish'
      id: web-ext-sign
      uses: kewisch/action-web-ext@v1
      with:
        cmd: sign
        channel: unlisted
        source: ${{ steps.web-ext-build.outputs.target }}
        apiKey: ${{ secrets.FIREFOX_API_KEY }}
        apiSecret: ${{ secrets.FIREFOX_CLIENT_SECRET }}
        apiUrlPrefix: https://addons.mozilla.org/api/v5


  Chrome:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['12.x']


    steps:
    - uses: actions/checkout@v2	
    
      # Initialize Node.js
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

      # Install project dependencies and build
    - name: Install dependencies
      run: npm install
      

    - name: Build the code
      run: npm run build
      env:
        CI: false

    - name: Pack extension
      uses: TheDoctor0/zip-release@0.4.1
      with:
        filename: ./Package.zip
        directory: ./build

    - name: Drop artifacts
      uses: actions/upload-artifact@v2
      with:
        name: 'Chrome Artifacts'
        path: ./build/Package.zip

    # - name: Publish to Chrome Webstore
    #   uses: mnao305/chrome-extension-upload@1.1.1
    #   with:
    #     extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
    #     file-path: ./Package.zip
    #     client-id: ${{ secrets.CHROME_CLIENT_ID }}
    #     client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
    #     refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
